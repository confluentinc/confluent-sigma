/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.confluent.sigmarules.models;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DetectionResultsAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6202566313870408869L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DetectionResultsAvro\",\"namespace\":\"io.confluent.sigmarules.models\",\"fields\":[{\"name\":\"timeStamp\",\"type\":\"long\"},{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"outputTopic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sourceData\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"customFields\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\",\"default\":{}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DetectionResultsAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DetectionResultsAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DetectionResultsAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DetectionResultsAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DetectionResultsAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DetectionResultsAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DetectionResultsAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DetectionResultsAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DetectionResultsAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long timeStamp;
  private java.lang.String title;
  private java.lang.String id;
  private java.lang.String outputTopic;
  private java.lang.String sourceData;
  private java.util.Map<java.lang.String,java.lang.String> customFields;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DetectionResultsAvro() {}

  /**
   * All-args constructor.
   * @param timeStamp The new value for timeStamp
   * @param title The new value for title
   * @param id The new value for id
   * @param outputTopic The new value for outputTopic
   * @param sourceData The new value for sourceData
   * @param customFields The new value for customFields
   */
  public DetectionResultsAvro(java.lang.Long timeStamp, java.lang.String title, java.lang.String id, java.lang.String outputTopic, java.lang.String sourceData, java.util.Map<java.lang.String,java.lang.String> customFields) {
    this.timeStamp = timeStamp;
    this.title = title;
    this.id = id;
    this.outputTopic = outputTopic;
    this.sourceData = sourceData;
    this.customFields = customFields;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timeStamp;
    case 1: return title;
    case 2: return id;
    case 3: return outputTopic;
    case 4: return sourceData;
    case 5: return customFields;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timeStamp = (java.lang.Long)value$; break;
    case 1: title = value$ != null ? value$.toString() : null; break;
    case 2: id = value$ != null ? value$.toString() : null; break;
    case 3: outputTopic = value$ != null ? value$.toString() : null; break;
    case 4: sourceData = value$ != null ? value$.toString() : null; break;
    case 5: customFields = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'timeStamp' field.
   * @return The value of the 'timeStamp' field.
   */
  public long getTimeStamp() {
    return timeStamp;
  }


  /**
   * Sets the value of the 'timeStamp' field.
   * @param value the value to set.
   */
  public void setTimeStamp(long value) {
    this.timeStamp = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }


  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'outputTopic' field.
   * @return The value of the 'outputTopic' field.
   */
  public java.lang.String getOutputTopic() {
    return outputTopic;
  }


  /**
   * Sets the value of the 'outputTopic' field.
   * @param value the value to set.
   */
  public void setOutputTopic(java.lang.String value) {
    this.outputTopic = value;
  }

  /**
   * Gets the value of the 'sourceData' field.
   * @return The value of the 'sourceData' field.
   */
  public java.lang.String getSourceData() {
    return sourceData;
  }


  /**
   * Sets the value of the 'sourceData' field.
   * @param value the value to set.
   */
  public void setSourceData(java.lang.String value) {
    this.sourceData = value;
  }

  /**
   * Gets the value of the 'customFields' field.
   * @return The value of the 'customFields' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getCustomFields() {
    return customFields;
  }


  /**
   * Sets the value of the 'customFields' field.
   * @param value the value to set.
   */
  public void setCustomFields(java.util.Map<java.lang.String,java.lang.String> value) {
    this.customFields = value;
  }

  /**
   * Creates a new DetectionResultsAvro RecordBuilder.
   * @return A new DetectionResultsAvro RecordBuilder
   */
  public static io.confluent.sigmarules.models.DetectionResultsAvro.Builder newBuilder() {
    return new io.confluent.sigmarules.models.DetectionResultsAvro.Builder();
  }

  /**
   * Creates a new DetectionResultsAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DetectionResultsAvro RecordBuilder
   */
  public static io.confluent.sigmarules.models.DetectionResultsAvro.Builder newBuilder(io.confluent.sigmarules.models.DetectionResultsAvro.Builder other) {
    if (other == null) {
      return new io.confluent.sigmarules.models.DetectionResultsAvro.Builder();
    } else {
      return new io.confluent.sigmarules.models.DetectionResultsAvro.Builder(other);
    }
  }

  /**
   * Creates a new DetectionResultsAvro RecordBuilder by copying an existing DetectionResultsAvro instance.
   * @param other The existing instance to copy.
   * @return A new DetectionResultsAvro RecordBuilder
   */
  public static io.confluent.sigmarules.models.DetectionResultsAvro.Builder newBuilder(io.confluent.sigmarules.models.DetectionResultsAvro other) {
    if (other == null) {
      return new io.confluent.sigmarules.models.DetectionResultsAvro.Builder();
    } else {
      return new io.confluent.sigmarules.models.DetectionResultsAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for DetectionResultsAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DetectionResultsAvro>
    implements org.apache.avro.data.RecordBuilder<DetectionResultsAvro> {

    private long timeStamp;
    private java.lang.String title;
    private java.lang.String id;
    private java.lang.String outputTopic;
    private java.lang.String sourceData;
    private java.util.Map<java.lang.String,java.lang.String> customFields;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.confluent.sigmarules.models.DetectionResultsAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timeStamp)) {
        this.timeStamp = data().deepCopy(fields()[0].schema(), other.timeStamp);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.outputTopic)) {
        this.outputTopic = data().deepCopy(fields()[3].schema(), other.outputTopic);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.sourceData)) {
        this.sourceData = data().deepCopy(fields()[4].schema(), other.sourceData);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.customFields)) {
        this.customFields = data().deepCopy(fields()[5].schema(), other.customFields);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing DetectionResultsAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(io.confluent.sigmarules.models.DetectionResultsAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.timeStamp)) {
        this.timeStamp = data().deepCopy(fields()[0].schema(), other.timeStamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.outputTopic)) {
        this.outputTopic = data().deepCopy(fields()[3].schema(), other.outputTopic);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceData)) {
        this.sourceData = data().deepCopy(fields()[4].schema(), other.sourceData);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.customFields)) {
        this.customFields = data().deepCopy(fields()[5].schema(), other.customFields);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'timeStamp' field.
      * @return The value.
      */
    public long getTimeStamp() {
      return timeStamp;
    }


    /**
      * Sets the value of the 'timeStamp' field.
      * @param value The value of 'timeStamp'.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder setTimeStamp(long value) {
      validate(fields()[0], value);
      this.timeStamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timeStamp' field has been set.
      * @return True if the 'timeStamp' field has been set, false otherwise.
      */
    public boolean hasTimeStamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timeStamp' field.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder clearTimeStamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return title;
    }


    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder setTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.title = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder clearTitle() {
      title = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder setId(java.lang.String value) {
      validate(fields()[2], value);
      this.id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputTopic' field.
      * @return The value.
      */
    public java.lang.String getOutputTopic() {
      return outputTopic;
    }


    /**
      * Sets the value of the 'outputTopic' field.
      * @param value The value of 'outputTopic'.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder setOutputTopic(java.lang.String value) {
      validate(fields()[3], value);
      this.outputTopic = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'outputTopic' field has been set.
      * @return True if the 'outputTopic' field has been set, false otherwise.
      */
    public boolean hasOutputTopic() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'outputTopic' field.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder clearOutputTopic() {
      outputTopic = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceData' field.
      * @return The value.
      */
    public java.lang.String getSourceData() {
      return sourceData;
    }


    /**
      * Sets the value of the 'sourceData' field.
      * @param value The value of 'sourceData'.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder setSourceData(java.lang.String value) {
      validate(fields()[4], value);
      this.sourceData = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceData' field has been set.
      * @return True if the 'sourceData' field has been set, false otherwise.
      */
    public boolean hasSourceData() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sourceData' field.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder clearSourceData() {
      sourceData = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'customFields' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getCustomFields() {
      return customFields;
    }


    /**
      * Sets the value of the 'customFields' field.
      * @param value The value of 'customFields'.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder setCustomFields(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[5], value);
      this.customFields = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'customFields' field has been set.
      * @return True if the 'customFields' field has been set, false otherwise.
      */
    public boolean hasCustomFields() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'customFields' field.
      * @return This builder.
      */
    public io.confluent.sigmarules.models.DetectionResultsAvro.Builder clearCustomFields() {
      customFields = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DetectionResultsAvro build() {
      try {
        DetectionResultsAvro record = new DetectionResultsAvro();
        record.timeStamp = fieldSetFlags()[0] ? this.timeStamp : (java.lang.Long) defaultValue(fields()[0]);
        record.title = fieldSetFlags()[1] ? this.title : (java.lang.String) defaultValue(fields()[1]);
        record.id = fieldSetFlags()[2] ? this.id : (java.lang.String) defaultValue(fields()[2]);
        record.outputTopic = fieldSetFlags()[3] ? this.outputTopic : (java.lang.String) defaultValue(fields()[3]);
        record.sourceData = fieldSetFlags()[4] ? this.sourceData : (java.lang.String) defaultValue(fields()[4]);
        record.customFields = fieldSetFlags()[5] ? this.customFields : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DetectionResultsAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<DetectionResultsAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DetectionResultsAvro>
    READER$ = (org.apache.avro.io.DatumReader<DetectionResultsAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.timeStamp);

    out.writeString(this.title);

    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    out.writeString(this.outputTopic);

    out.writeString(this.sourceData);

    if (this.customFields == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.customFields.size();
      out.writeMapStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.String> e0: this.customFields.entrySet()) {
        actualSize0++;
        out.startItem();
        out.writeString(e0.getKey());
        java.lang.String v0 = e0.getValue();
        out.writeString(v0);
      }
      out.writeMapEnd();
      if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.timeStamp = in.readLong();

      this.title = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString();
      }

      this.outputTopic = in.readString();

      this.sourceData = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.customFields = null;
      } else {
        long size0 = in.readMapStart();
        java.util.Map<java.lang.String,java.lang.String> m0 = this.customFields; // Need fresh name due to limitation of macro system
        if (m0 == null) {
          m0 = new java.util.HashMap<java.lang.String,java.lang.String>((int)(size0 * 4)/3 + 1);
          this.customFields = m0;
        } else m0.clear();
        for ( ; 0 < size0; size0 = in.mapNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.String k0 = null;
            k0 = in.readString();
            java.lang.String v0 = null;
            v0 = in.readString();
            m0.put(k0, v0);
          }
        }
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.timeStamp = in.readLong();
          break;

        case 1:
          this.title = in.readString();
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString();
          }
          break;

        case 3:
          this.outputTopic = in.readString();
          break;

        case 4:
          this.sourceData = in.readString();
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customFields = null;
          } else {
            long size0 = in.readMapStart();
            java.util.Map<java.lang.String,java.lang.String> m0 = this.customFields; // Need fresh name due to limitation of macro system
            if (m0 == null) {
              m0 = new java.util.HashMap<java.lang.String,java.lang.String>((int)(size0 * 4)/3 + 1);
              this.customFields = m0;
            } else m0.clear();
            for ( ; 0 < size0; size0 = in.mapNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.String k0 = null;
                k0 = in.readString();
                java.lang.String v0 = null;
                v0 = in.readString();
                m0.put(k0, v0);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










